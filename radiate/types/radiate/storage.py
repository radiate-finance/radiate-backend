# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Any, Dict, Union

from pydantic import BaseModel, Extra


class TokenItem(BaseModel):
    class Config:
        extra = Extra.forbid

    FA12: str


class FA2(BaseModel):
    class Config:
        extra = Extra.forbid

    tokenAddress: str
    tokenId: str


class TokenItem1(BaseModel):
    class Config:
        extra = Extra.forbid

    FA2: FA2


class TokenItem2(BaseModel):
    class Config:
        extra = Extra.forbid

    tez: Dict[str, Any]


class Streams(BaseModel):
    class Config:
        extra = Extra.forbid

    deposit: str
    ratePerSecond: str
    receiver: str
    remainingBalance: str
    sender: str
    startTime: str
    stopTime: str
    token: Union[TokenItem, TokenItem1, TokenItem2]


class RadiateStorage(BaseModel):
    class Config:
        extra = Extra.forbid

    nextStreamId: str
    streams: Dict[str, Streams]
